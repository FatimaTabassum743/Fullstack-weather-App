{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\44757\\\\OneDrive\\\\Desktop\\\\Tasks\\\\task-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Matrix = () => {\n  _s();\n  const [matrix, setMatrix] = useState(Array(3).fill(Array(3).fill(\"white\")));\n  const [clickedBoxes, setClickedBoxes] = useState([]);\n  const handleBoxClick = (row, col) => {\n    const updatedMatrix = matrix.map((rowArray, rIndex) => rowArray.map((box, cIndex) => {\n      if (rIndex === row && cIndex === col) return \"green\";\n      return box;\n    }));\n    setMatrix(updatedMatrix);\n    setClickedBoxes(prev => [...prev, {\n      row,\n      col\n    }]);\n\n    // If it's the last box\n    if (row === 2 && col === 2) {\n      changeColorsSequentially();\n    }\n  };\n  const changeColorsSequentially = () => {\n    let delay = 0;\n    clickedBoxes.forEach(({\n      row,\n      col\n    }) => {\n      setTimeout(() => {\n        setMatrix(prevMatrix => prevMatrix.map((rowArray, rIndex) => rowArray.map((box, cIndex) => {\n          if (rIndex === row && cIndex === col) return \"orange\";\n          return box;\n        })));\n      }, delay);\n      delay += 500; // 500ms delay between each color change\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      gap: \"10px\"\n    },\n    children: matrix.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: \"10px\"\n      },\n      children: row.map((color, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleBoxClick(rowIndex, colIndex),\n        style: {\n          width: \"50px\",\n          height: \"50px\",\n          backgroundColor: color,\n          border: \"1px solid black\",\n          cursor: \"pointer\"\n        }\n      }, colIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Matrix, \"TzXibXpAJWxB2ZRXKkADnFfWkPU=\");\n_c = Matrix;\nexport default Matrix;\nvar _c;\n$RefreshReg$(_c, \"Matrix\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Matrix","_s","matrix","setMatrix","Array","fill","clickedBoxes","setClickedBoxes","handleBoxClick","row","col","updatedMatrix","map","rowArray","rIndex","box","cIndex","prev","changeColorsSequentially","delay","forEach","setTimeout","prevMatrix","style","display","flexDirection","gap","children","rowIndex","color","colIndex","onClick","width","height","backgroundColor","border","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/44757/OneDrive/Desktop/Tasks/task-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst Matrix = () => {\n  const [matrix, setMatrix] = useState(Array(3).fill(Array(3).fill(\"white\")));\n  const [clickedBoxes, setClickedBoxes] = useState([]);\n\n  const handleBoxClick = (row, col) => {\n    const updatedMatrix = matrix.map((rowArray, rIndex) =>\n      rowArray.map((box, cIndex) => {\n        if (rIndex === row && cIndex === col) return \"green\";\n        return box;\n      })\n    );\n\n    setMatrix(updatedMatrix);\n    setClickedBoxes((prev) => [...prev, { row, col }]);\n\n    // If it's the last box\n    if (row === 2 && col === 2) {\n      changeColorsSequentially();\n    }\n  };\n\n  const changeColorsSequentially = () => {\n    let delay = 0;\n    clickedBoxes.forEach(({ row, col }) => {\n      setTimeout(() => {\n        setMatrix((prevMatrix) =>\n          prevMatrix.map((rowArray, rIndex) =>\n            rowArray.map((box, cIndex) => {\n              if (rIndex === row && cIndex === col) return \"orange\";\n              return box;\n            })\n          )\n        );\n      }, delay);\n      delay += 500; // 500ms delay between each color change\n    });\n  };\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"10px\" }}>\n      {matrix.map((row, rowIndex) => (\n        <div key={rowIndex} style={{ display: \"flex\", gap: \"10px\" }}>\n          {row.map((color, colIndex) => (\n            <div\n              key={colIndex}\n              onClick={() => handleBoxClick(rowIndex, colIndex)}\n              style={{\n                width: \"50px\",\n                height: \"50px\",\n                backgroundColor: color,\n                border: \"1px solid black\",\n                cursor: \"pointer\",\n              }}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Matrix;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAACO,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAACD,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;EAC3E,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMW,cAAc,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAK;IACnC,MAAMC,aAAa,GAAGT,MAAM,CAACU,GAAG,CAAC,CAACC,QAAQ,EAAEC,MAAM,KAChDD,QAAQ,CAACD,GAAG,CAAC,CAACG,GAAG,EAAEC,MAAM,KAAK;MAC5B,IAAIF,MAAM,KAAKL,GAAG,IAAIO,MAAM,KAAKN,GAAG,EAAE,OAAO,OAAO;MACpD,OAAOK,GAAG;IACZ,CAAC,CACH,CAAC;IAEDZ,SAAS,CAACQ,aAAa,CAAC;IACxBJ,eAAe,CAAEU,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;MAAER,GAAG;MAAEC;IAAI,CAAC,CAAC,CAAC;;IAElD;IACA,IAAID,GAAG,KAAK,CAAC,IAAIC,GAAG,KAAK,CAAC,EAAE;MAC1BQ,wBAAwB,CAAC,CAAC;IAC5B;EACF,CAAC;EAED,MAAMA,wBAAwB,GAAGA,CAAA,KAAM;IACrC,IAAIC,KAAK,GAAG,CAAC;IACbb,YAAY,CAACc,OAAO,CAAC,CAAC;MAAEX,GAAG;MAAEC;IAAI,CAAC,KAAK;MACrCW,UAAU,CAAC,MAAM;QACflB,SAAS,CAAEmB,UAAU,IACnBA,UAAU,CAACV,GAAG,CAAC,CAACC,QAAQ,EAAEC,MAAM,KAC9BD,QAAQ,CAACD,GAAG,CAAC,CAACG,GAAG,EAAEC,MAAM,KAAK;UAC5B,IAAIF,MAAM,KAAKL,GAAG,IAAIO,MAAM,KAAKN,GAAG,EAAE,OAAO,QAAQ;UACrD,OAAOK,GAAG;QACZ,CAAC,CACH,CACF,CAAC;MACH,CAAC,EAAEI,KAAK,CAAC;MACTA,KAAK,IAAI,GAAG,CAAC,CAAC;IAChB,CAAC,CAAC;EACJ,CAAC;EAED,oBACEpB,OAAA;IAAKwB,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,aAAa,EAAE,QAAQ;MAAEC,GAAG,EAAE;IAAO,CAAE;IAAAC,QAAA,EACnEzB,MAAM,CAACU,GAAG,CAAC,CAACH,GAAG,EAAEmB,QAAQ,kBACxB7B,OAAA;MAAoBwB,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEE,GAAG,EAAE;MAAO,CAAE;MAAAC,QAAA,EACzDlB,GAAG,CAACG,GAAG,CAAC,CAACiB,KAAK,EAAEC,QAAQ,kBACvB/B,OAAA;QAEEgC,OAAO,EAAEA,CAAA,KAAMvB,cAAc,CAACoB,QAAQ,EAAEE,QAAQ,CAAE;QAClDP,KAAK,EAAE;UACLS,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE,MAAM;UACdC,eAAe,EAAEL,KAAK;UACtBM,MAAM,EAAE,iBAAiB;UACzBC,MAAM,EAAE;QACV;MAAE,GARGN,QAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASd,CACF;IAAC,GAbMZ,QAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAcb,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACvC,EAAA,CA3DID,MAAM;AAAAyC,EAAA,GAANzC,MAAM;AA6DZ,eAAeA,MAAM;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}